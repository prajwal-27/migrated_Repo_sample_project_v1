workflow:
  name: 'Pipeline for branch: $CI_COMMIT_BRANCH'

stages:
  - build
  - test
  - deploy

variables:
  name : "Tom Cruise"
  email : "tom_cruise@gmail.com"
  id : 101
  USA : true

# extend keyword
.some_script:
  before_script:
    echo "We are learning gitlab session for extends keyword" 
    echo "Presenting by devops z+ tutorials"
temp_job:
  script: |
    - echo "$CI_COMMIT_MESSAGE"

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  extends: .some_script
  script: |
    - echo "Compiling the code..."
    - echo "Compile complete."
    - echo "Hero Name: $name"
    - echo "Hero email id: $email"
    - echo "Hero ID: $id"
    - echo "Hero Nation: $USA"
    - echo "this is build job line added" >> questions.txt
    
  artifacts:
    name: '$CI_JOB_ID'
    paths:
      [questions.txt]



unit-test-job:   # This job runs in the test stage.
  stage: test
  variables:
    test_job_var: "Hi I Am Test job variables"    # It only starts when the job in the build stage completes successfully.
  script: 
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"
    - echo "this is the Test job added" >> questions.txt
    - cat questions.txt
  rules:
    - if: '$USA'

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
